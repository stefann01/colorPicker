{"version":3,"sources":["components/OptionBar/optionBar.module.scss","components/NavigationBar/NavigationBar.module.scss","components/NavigationBar/NavigationBar.tsx","Models/Color.ts","service/colorService.ts","Context/Reducers/colorReducer.tsx","Context/ColorContext.tsx","components/ColorPalette/ColorPalette.tsx","components/OptionBar/OptionBar.tsx","App.tsx","serviceWorker.ts","index.tsx","components/ColorPalette/colorPalette.module.scss"],"names":["module","exports","NavigationBar","Container","fluid","Navbar","expand","variant","bg","Brand","href","Text","onClick","console","log","className","styles","test","ColorModel","hexCode","isLocked","ColorService","amount","items","Array","i","Math","random","toString","padStart","colors","first","second","temp","colorReducer","action","colorService","type","generateRandomColor","generateRandomColors","length","filter","item","index","payload","swappedColors","swapColors","slice","defaultColorValues","ColorContext","React","createContext","ColorContextProvider","props","useReducer","dispatchColorAction","Provider","value","children","useColorContext","useContext","memo","colorContext","useState","setHeight","useSnackbar","enqueueSnackbar","closeSnackbar","useEffect","actualHeight","document","getElementById","offsetHeight","handleKeyDown","event","keyCode","window","addEventListener","removeEventListener","colorPalette","map","color","key","parent","style","backgroundColor","width","marginLeft","marginRight","child","data-tip","copy","autoHideDuration","copyCodeToClipboard","iconMove","iconDelete","OptionBar","display","flexDirection","height","addColor","generateButton","generateMethod","defaultChecked","gradient","removeColor","App","maxSnack","anchorOrigin","vertical","horizontal","Boolean","location","hostname","match","ReactDOM","render","StrictMode","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.c76306fa.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"addColor\":\"optionBar_addColor__2cLIJ\",\"removeColor\":\"optionBar_removeColor__1ev7O\",\"generateMethod\":\"optionBar_generateMethod__Cnqdk\",\"generateButton\":\"optionBar_generateButton__1M50O\",\"gradient\":\"optionBar_gradient__oJDQn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"test\":\"NavigationBar_test__vDAZh\"};","import React from \"react\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport styles from \"./NavigationBar.module.scss\";\r\nimport Container from \"react-bootstrap/esm/Container\";\r\n\r\nfunction NavigationBar() {\r\n    return (\r\n        <Container fluid>\r\n            <Navbar expand=\"lg\" variant=\"dark\" bg=\"dark\">\r\n                <Navbar.Brand href=\"#\">Navbar</Navbar.Brand>\r\n                <Navbar.Text\r\n                    onClick={() => {\r\n                        console.log(\"Clicked\");\r\n                    }}\r\n                    className={styles.test}\r\n                >\r\n                    Create Pallete\r\n                </Navbar.Text>\r\n            </Navbar>\r\n        </Container>\r\n    );\r\n}\r\n\r\nexport default NavigationBar;\r\n","export default class ColorModel{\r\n    constructor(public hexCode:string, public isLocked?:boolean){}\r\n}","import ColorModel from \"../Models/Color\";\r\n\r\nexport class ColorService{\r\n    generateRandomColors(amount:number):ColorModel[] {\r\n        let items = new Array<ColorModel>();\r\n        for (let i = 0; i < amount; ++i) {\r\n            items = [...items, new ColorModel(\"#\" + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, \"0\"))];\r\n        }\r\n        return items;\r\n    }\r\n    generateRandomColor():ColorModel{\r\n        return new ColorModel(\"#\" + ((Math.random() * 0xffffff) << 0).toString(16).padStart(6, \"0\"));\r\n    }\r\n\r\n    swapColors(colors:Array<ColorModel>, first:number, second:number){\r\n        let temp = colors[first];\r\n        colors[first] = colors[second];\r\n        colors[second] = temp;\r\n        return colors;\r\n    }\r\n}","import ColorModel from \"../../Models/Color\";\r\nimport { ColorService } from \"../../service/colorService\";\r\n\r\n\r\nexport const colorReducer = (\r\n    colors: ColorModel[],\r\n    action: any\r\n) => {\r\n    const colorService = new ColorService();\r\n    switch (action.type) {\r\n        case \"Add Color\":\r\n            return [...colors, colorService.generateRandomColor()];\r\n        case \"Generate\":\r\n            return colorService.generateRandomColors(colors.length);\r\n        case \"Remove\":\r\n            return colors.filter( (item, index) => index !== action.payload);\r\n        case \"Move Left\":{\r\n            let swappedColors = [...colors];\r\n            if(action.payload.index > 0){\r\n                return colorService.swapColors(swappedColors, action.payload.index, action.payload.index - 1);\r\n            }\r\n            else{\r\n                return colorService.swapColors(swappedColors, action.payload.index, swappedColors.length - 1);\r\n            }\r\n        }\r\n        case \"Move Right\":{\r\n            let swappedColors = [...colors];\r\n            if(action.payload.index < swappedColors.length - 1){\r\n                return colorService.swapColors(swappedColors, action.payload.index, action.payload.index + 1);\r\n            }\r\n            else{\r\n                return colorService.swapColors(swappedColors, action.payload.index, 0);\r\n            }\r\n        }\r\n        case \"Remove Last Color\":\r\n            return colors.slice(0, colors.length - 1);\r\n        default:\r\n            return [ ...colors ];\r\n    }\r\n};\r\n","import React, { useContext, useReducer } from \"react\";\r\nimport ColorModel from \"../Models/Color\";\r\nimport { ColorService } from \"../service/colorService\";\r\nimport { colorReducer } from \"./Reducers/colorReducer\";\r\n\r\nexport class ColorContextModel {\r\n    constructor(\r\n        public colors: ColorModel[],\r\n        public dispatchColorAction: React.Dispatch<any>\r\n    ) {}\r\n}\r\nconst colorService = new ColorService();\r\nconst defaultColorValues = colorService.generateRandomColors(5);\r\nconst ColorContext = React.createContext<ColorContextModel>({} as ColorContextModel);\r\n\r\nexport function ColorContextProvider(props: any){\r\n    const [colors, dispatchColorAction] = useReducer(colorReducer, defaultColorValues);\r\nreturn (\r\n    <ColorContext.Provider value={{colors, dispatchColorAction}}>\r\n        {props.children}\r\n    </ColorContext.Provider>\r\n)\r\n}\r\n\r\nexport function useColorContext(){\r\n    return useContext(ColorContext);\r\n}","import React, { useState, useEffect } from \"react\";\r\nimport copy from \"copy-to-clipboard\";\r\nimport { useSnackbar } from \"notistack\";\r\nimport styles from \"./colorPalette.module.scss\";\r\nimport { MdContentCopy } from \"react-icons/md\";\r\nimport { HiOutlineLockClosed, HiOutlineLockOpen } from \"react-icons/hi\";\r\nimport { AiOutlineLeft, AiOutlineRight } from \"react-icons/ai\";\r\nimport ReactTooltip from \"react-tooltip\";\r\nimport { useColorContext } from \"../../Context/ColorContext\";\r\nimport { FiTrash2 } from \"react-icons/fi\";\r\n\r\nfunction ColorPalette() {\r\n    const colorContext = useColorContext();\r\n    const [height, setHeight] = useState<number>(0);\r\n    const { enqueueSnackbar, closeSnackbar } = useSnackbar();\r\n\r\n    useEffect(() => {\r\n        const actualHeight = document.getElementById(\"picker\")?.offsetHeight;\r\n        if (actualHeight) {\r\n            setHeight(actualHeight);\r\n        }\r\n    }, []);\r\n\r\n    const handleKeyDown = (event: any) => {\r\n        console.log(\"A key was pressed\", event.keyCode);\r\n        switch(event.keyCode){\r\n            case 32:colorContext.dispatchColorAction({type:\"Generate\"});\r\n        }\r\n    };\r\n    useEffect(() => {\r\n        window.addEventListener(\"keydown\", handleKeyDown);\r\n        return () => {\r\n            window.removeEventListener(\"keydown\", handleKeyDown);\r\n        };\r\n    }, [handleKeyDown]);\r\n\r\n\r\n    function copyCodeToClipboard(color: string) {\r\n        copy(color.toString());\r\n        enqueueSnackbar(\"Copied to clipboard\", {\r\n            variant: \"success\",\r\n            autoHideDuration: 1200,\r\n        });\r\n    }\r\n\r\n    function validateHexColor(color: string) {\r\n        return /^#[0-9A-F]{6}$/i.test(color);\r\n    }\r\n\r\n    return (\r\n        <div className={styles.colorPalette}>\r\n            <ReactTooltip />\r\n            {colorContext.colors.map((color, index) => (\r\n                <div key={index} className={styles.parent} style={{ backgroundColor: color.hexCode, width: \"100%\" }}>\r\n                    <input type=\"text\" value={color.hexCode} style={{ marginLeft: \"30%\", marginRight:\"30%\" }} />\r\n                    <MdContentCopy className={styles.child} data-tip=\"Copy to Clipboard\" onClick={() => copyCodeToClipboard(color.hexCode)} />\r\n                    <HiOutlineLockOpen className={styles.child} data-tip=\"Lock color\" />\r\n                    <div>\r\n                        <AiOutlineLeft data-tip=\"Move Left\" className={styles.iconMove} onClick={()=>{colorContext.dispatchColorAction({type:\"Move Left\", payload:{index:index}})}} />\r\n                        <AiOutlineRight data-tip=\"Move Right\" className={styles.iconMove} onClick={()=>{colorContext.dispatchColorAction({type:\"Move Right\", payload:{index:index}})}} />\r\n                    </div>\r\n                    <FiTrash2  className={styles.iconDelete} onClick={()=>{colorContext.dispatchColorAction({type:\"Remove\", payload: index})}} />\r\n                </div>\r\n            ))}\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default React.memo(ColorPalette);\r\n","import React from \"react\";\r\nimport {FiPlusSquare, FiMinusSquare} from \"react-icons/fi\";\r\nimport styles from \"./optionBar.module.scss\";\r\nimport { useColorContext } from \"../../Context/ColorContext\";\r\n\r\nfunction OptionBar() {\r\n    const colorContext = useColorContext();\r\n    \r\n    \r\n    return (\r\n        <>\r\n            <div style={{display: \"flex\", flexDirection:\"row\", width:\"100%\", height:\"56px\"}}>\r\n            <FiPlusSquare className={styles.addColor} onClick={()=>{colorContext.dispatchColorAction({type:\"Add Color\"})}}/>\r\n            <button className={styles.generateButton} onClick={()=>{colorContext.dispatchColorAction({type:\"Generate\"})}}>Generate</button>\r\n            <select className={styles.generateMethod}>\r\n                <option defaultChecked>Generate Method:</option>\r\n                <option>Random</option>\r\n                <option>Monochrome</option>\r\n            </select>\r\n            <select className={styles.gradient}>\r\n                <option>Gradient</option>\r\n                <option>Locked gradient</option>\r\n            </select>\r\n            <FiMinusSquare data-tip=\"Remove last color\" className={styles.removeColor} onClick={()=>{colorContext.dispatchColorAction({type:\"Remove Last Color\"})}}/>\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default OptionBar;\r\n","import React from \"react\";\nimport NavigationBar from \"./components/NavigationBar/NavigationBar\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport ColorPalette from \"./components/ColorPalette/ColorPalette\";\nimport { SnackbarProvider } from \"notistack\";\nimport OptionBar from \"./components/OptionBar/OptionBar\";\nimport { ColorContextProvider } from \"./Context/ColorContext\";\n\nfunction App() {\n    return (\n        <div style={{ height: \"100%\" }}>\n            <SnackbarProvider\n                maxSnack={3}\n                anchorOrigin={{\n                    vertical: \"top\",\n                    horizontal: \"center\",\n                }}\n            >\n                <NavigationBar />\n                <ColorContextProvider>\n                    <OptionBar />\n                    <ColorPalette />\n                </ColorContextProvider>\n            </SnackbarProvider>\n        </div>\n    );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"colorPalette\":\"colorPalette_colorPalette__1pkRI\",\"parent\":\"colorPalette_parent__3hQJ1\",\"child\":\"colorPalette_child__2WYFL\",\"iconMove\":\"colorPalette_iconMove__1MLQP\",\"iconDelete\":\"colorPalette_iconDelete__3sIyQ\"};"],"sourceRoot":""}